version = (1, 0, 0)

# meta developer: @RUIS_VlP, @matubuntu

import random
from datetime import timedelta
from telethon import events
from telethon import functions
from telethon.tl.types import Message
from .. import loader, utils

bot = ["@GPTChatRBot", 5989217330]
bot1 = ["@alice_ya_bot", 8310045254]
@loader.tds
class RUISChatGPTMod(loader.Module):
    """ChatGPT 3, Gigachat –±–µ–∑ API –∫–ª—é—á–∞ –∏ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º. –ë–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤: @Gigachat_bot –∏ @GPTChatRBot. –ú–æ–¥—É–ª—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ –ª–∏—Ü–µ–Ω–∑–∏–∏ MIT."""

    strings = {
        "name": "AliceGpt",
    }
            	
    @loader.command()
    async def gptdelcmd(self, message):
        """- –æ—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é(–∫–æ–Ω—Ç–µ–∫—Å—Ç)"""
        chat = bot[1]
        text = "/clear"
        async with message.client.conversation(bot[0]) as conv:
            response = await conv.send_message(text)
            response1 = await conv.wait_event(events.NewMessage(incoming=True, from_users=chat))
            await utils.answer(message, "‚úÖ<b>–ö–æ–Ω—Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω!</b>")
            await response.delete()
            await response1.delete()
           
    @loader.command()
    async def alice(self, message):
        """<—Ç–µ–∫—Å—Ç> - –∑–∞–ø—Ä–æ—Å –∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ GigaChat"""
        chat = bot1[1]
        reply = await message.get_reply_message()
        text = reply.raw_text if reply else message.text[5:]
        if len(text) < 3:
         await utils.answer(message, "üö´<b>–û—à–∏–±–∫–∞!\n–°–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π –∑–∞–ø—Ä–æ—Å.</b>")
         return
        await utils.answer(message, "üíÖüèª<b>–ê–ª–∏—Å–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å...</b>")
        async with message.client.conversation(bot1[0]) as conv:
            
            response = await conv.send_message(text)
            
            response1 = await conv.wait_event(events.NewMessage(incoming=True, from_users=chat))
            
            if "üí≠–ï—â—ë —á—É—Ç—å-—á—É—Ç—å, –≥–æ—Ç–æ–≤–ª—é –æ—Ç–≤–µ—Ç" in response1.text:
             response2 = await conv.wait_event(events.NewMessage(incoming=True, from_users=chat))
             await utils.answer(message, f"‚ùì<b>–í–æ–ø—Ä–æ—Å:</b> \n{text}\n\nüíÖüèª <b>–û—Ç–≤–µ—Ç –ê–ª–∏—Å—ã:</b>\n{response2.text}")
             await response.delete()
             await response1.delete()
             await response2.delete()
             return
            else:
             await utils.answer(message, f"‚ùì<b>–í–æ–ø—Ä–æ—Å:</b> \n{text}\n\nü§ñ <b>–û—Ç–≤–µ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:</b>\n{response1.text}")
             await response.delete()
             await response1.delete()


            	
    @loader.command()
    async def aliceclear(self, message):
        """- –æ—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å –ê–ª–∏—Å–æ–π (–∫–æ–Ω—Ç–µ–∫—Å—Ç)"""
        chat = bot1[1]
        text = "üÜï –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–ª–æ–≥"
        async with message.client.conversation(bot1[0]) as conv:
            response = await conv.send_message(text)
            response1 = await conv.wait_event(events.NewMessage(incoming=True, from_users=chat))
            await utils.answer(message, "‚úÖ<b>–ö–æ–Ω—Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω!</b>")
            await response.delete()
            await response1.delete()
           
    @loader.command()
    async def gptcmd(self, message):
        """<—Ç–µ–∫—Å—Ç> - –∑–∞–ø—Ä–æ—Å –∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ ChatGPT"""
        chat = bot[1]
        reply = await message.get_reply_message()
        text = reply.raw_text if reply else message.text[5:]
        if len(text) < 3:
        	await utils.answer(message, "üö´<b>–û—à–∏–±–∫–∞!\n–°–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π –∑–∞–ø—Ä–æ—Å.</b>")
        	return
        await utils.answer(message, "ü§ñ<b>–ù–µ–π—Ä–æ—Å–µ—Ç—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å...</b>")
        async with message.client.conversation(bot[0]) as conv:
            response = await conv.send_message(text)
            response1 = await conv.wait_event(events.NewMessage(incoming=True, from_users=chat))
            await utils.answer(message, f"‚ùì<b>–í–æ–ø—Ä–æ—Å:</b> \n{text}\n\nü§ñ <b>–û—Ç–≤–µ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:</b>\n{response1.text}")
            await response.delete()
            await response1.delete()
